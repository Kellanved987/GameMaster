# session_zero.py

from sqlalchemy.orm import Session as DBSession
from gemini_interface.gemini_client import call_gemini_with_tools
# --- CHANGE 1: Import the specific tool and handler we need ---
from world_tools import (
    finalize_character_and_world,
    FUNCTION_HANDLERS,
    Tool,
    FunctionDeclaration,
)

# --- CHANGE 2: Define the minimal toolset for session zero ---
FINALIZE_TOOL = [
    Tool(
        function_declarations=[
            FunctionDeclaration(
                name="finalize_character_and_world",
                description=FUNCTION_HANDLERS["finalize_character_and_world"].__doc__,
                parameters={
                    "type": "object",
                    "properties": {
                        "genre": {"type": "string"},
                        "tone": {"type": "string"},
                        "world_intro": {"type": "string"},
                        "player_name": {"type": "string"},
                        "backstory": {"type": "string"},
                        "attributes": {"type": "object"},
                        "skills": {"type": "array", "items": {"type": "string"}},
                    },
                    "required": [
                        "genre", "tone", "world_intro", "player_name",
                        "backstory", "attributes", "skills"
                    ],
                },
            )
        ]
    )
]

# --- CHANGE 3: Update the function to accept a message list ---
def run_session_zero_turn(db: DBSession, messages: list):
    """
    Processes a single turn of the Session Zero conversation using a stateful history.
    """
    system_instruction = {
        "role": "system",
        "content": """
You are a friendly and creative guide for Session Zero of a new text-based RPG.
Your goal is to have a natural conversation with the player to collaboratively build the game world and their character.
Do NOT ask a list of questions. Ask one open-ended question at a time, then ask clarifying follow-up questions based on the player's response.
First, establish the world's genre, tone, and a brief description.
Second, work with the player to create their character concept, name, and backstory.
Third, help them define their character's mechanics. Suggest 3-5 starting skills based on their backstory. For attributes (strength, dexterity, intelligence, charisma, wisdom, constitution), suggest a balanced array like 14, 13, 12, 11, 10, 8 to be assigned, but allow the player to adjust them.
Finally, once the player is happy with everything, summarize all the details and call the `finalize_character_and_world` tool to officially create the character and start the game.
Be engaging, creative, and conversational.
"""
    }

    # Combine system instruction with the message history
    full_history = [system_instruction] + messages

    # --- CHANGE 4: Call the Gemini client with the history and minimal tool ---
    response_text = call_gemini_with_tools(
        db, None, messages=full_history, tools=FINALIZE_TOOL
    )

    return response_text